#!/usr/bin/env python
import ROOT
ROOT.gROOT.SetBatch(True)
import sys
from collections import OrderedDict

ROOT.gStyle.SetOptDate(0)

attributes = ['LineColor', 'LineStyle', 'LineWidth', 'MarkerColor', 'MarkerStyle', 'MarkerSize']

plotFolders = {
        'Express2015D_sep17.root' : {
            'Run 2015D Express BX0' : {
                'folderName' : 'PUMcalcCentralBX',
                'LineColor' : ROOT.kGray,
                'LineStyle' : ROOT.kDashed,
                'LineWidth' : 2,
            },
            'Run 2015D Express BX +/- 2' : {
                'folderName' : 'PUMcalcSideBX',
                'LineColor' : ROOT.kBlack,
                'LineWidth' : 2,
            }
        },
        'neutrinoGunPhys14.root' : {
            'MC Phys14 (GlobalTag RCT scales)' : {
                'folderName' : 'PUMcalc',
                'LineColor' : ROOT.kGreen,
                'LineWidth' : 2,
            }
        },
        'neutrinoGunSpring15Flat.root' : {
            'MC Spring15 Flat PU (V4 RCT scales)' : {
                'folderName' : 'PUMcalc',
                'LineColor' : ROOT.kBlue,
                'LineWidth' : 2,
            }
        },
        'QCDHF.root' : {
            'QCD MC w/HF corrections' : {
                'folderName' : 'PUMcalc',
                'LineColor' : ROOT.kRed,
                'LineStyle' : ROOT.kDashed,
                'LineWidth' : 2,
            }
        },
        'neutrinoGunHF.root' : {
            'MC w/HF corrections (V4 RCT scales)' : {
                'folderName' : 'PUMcalc',
                'LineColor' : ROOT.kRed,
                'LineWidth' : 2,
            }
        },
    }

plots = {}
for fileName, folders in plotFolders.iteritems() :
    dqmFile = ROOT.TFile.Open(fileName)
    for labelName, info in folders.iteritems() :
        folder = dqmFile.Get(info['folderName'])
        folderPlots = (k.ReadObj() for k in folder.GetListOfKeys())
        for plot in folderPlots :
            if not plot.GetName() in plots :
                plots[plot.GetName()] = OrderedDict()
            newPlot = plot.Clone(plot.GetName()+labelName.replace(' ','_'))
            newPlot.SetTitle(labelName)
            for attr, value in info.iteritems() :
                if attr is 'folderName' :
                    continue
                if hasattr(newPlot, 'Set'+attr) :
                    getattr(newPlot, 'Set'+attr)(value)
            plots[plot.GetName()][labelName] = newPlot
            newPlot.SetDirectory(0)

regionSubtraction_PU20_MC13TeV = [
        0.000000, 0.120605, 0.169256, 0.268826, 0.382774, 0.513016, 0.663822, 0.832437, 1.027508, 1.243615, 1.484510, 1.748505, 2.046062, 2.398011, 2.850694, 3.134921, 0.000000, 0.000000,
        0.000000, 0.156470, 0.206591, 0.316716, 0.437151, 0.575129, 0.724797, 0.900622, 1.100065, 1.319216, 1.566611, 1.840780, 2.146836, 2.512393, 2.978403, 3.746032, 0.000000, 0.000000,
        0.000000, 0.123418, 0.266302, 0.359626, 0.484167, 0.622231, 0.777349, 0.951710, 1.152564, 1.374389, 1.628914, 1.912047, 2.231072, 2.600804, 3.047708, 3.246032, 0.000000, 0.000000,
        0.000000, 0.073136, 0.119262, 0.170035, 0.220106, 0.275605, 0.345793, 0.421699, 0.516175, 0.624704, 0.753339, 0.897683, 1.068766, 1.261715, 1.510694, 1.773810, 0.000000, 0.000000,
        0.055556, 0.246835, 0.273910, 0.336138, 0.416017, 0.486257, 0.575602, 0.688235, 0.841946, 1.037108, 1.312716, 1.656287, 2.139884, 2.717933, 3.581944, 4.833333, 0.000000, 0.000000,
        0.027778, 0.081575, 0.159538, 0.185340, 0.203983, 0.233673, 0.261819, 0.298637, 0.346385, 0.404360, 0.478642, 0.565410, 0.688215, 0.843343, 1.077222, 1.757937, 0.000000, 0.000000,
        0.000000, 0.140999, 0.150780, 0.173510, 0.211846, 0.234709, 0.266815, 0.302040, 0.350794, 0.405643, 0.469773, 0.544242, 0.643746, 0.772390, 0.966111, 1.341270, 0.000000, 0.000000,
        0.027778, 0.073136, 0.168649, 0.194531, 0.217132, 0.257744, 0.288562, 0.330748, 0.380863, 0.433790, 0.506866, 0.593113, 0.698211, 0.848414, 1.000417, 1.559524, 0.000000, 0.000000,
        0.027778, 0.182138, 0.189746, 0.215618, 0.241512, 0.278904, 0.310158, 0.358551, 0.408175, 0.472616, 0.550445, 0.642227, 0.759521, 0.896945, 1.104861, 1.801587, 0.000000, 0.000000,
        0.055556, 0.146273, 0.191632, 0.227958, 0.274799, 0.314503, 0.360935, 0.407808, 0.466380, 0.537669, 0.622278, 0.738058, 0.858959, 1.020501, 1.268681, 1.182540, 0.000000, 0.000000,
        0.027778, 0.298875, 0.194157, 0.266737, 0.302445, 0.352081, 0.396646, 0.445615, 0.510057, 0.585290, 0.678849, 0.792132, 0.923268, 1.092671, 1.272917, 1.674603, 0.000000, 0.000000,
        0.027778, 0.196906, 0.215701, 0.272407, 0.314203, 0.350184, 0.403693, 0.451630, 0.513017, 0.591138, 0.684406, 0.794723, 0.934995, 1.096773, 1.263472, 2.682540, 0.000000, 0.000000,
        0.000000, 0.203586, 0.211865, 0.234317, 0.279873, 0.326339, 0.363821, 0.417158, 0.477276, 0.548621, 0.640194, 0.746714, 0.881186, 1.042592, 1.211389, 2.154762, 0.000000, 0.000000,
        0.000000, 0.176864, 0.175042, 0.210207, 0.240979, 0.280980, 0.319586, 0.361009, 0.415540, 0.478681, 0.556795, 0.650872, 0.764839, 0.917022, 1.078958, 1.361111, 0.000000, 0.000000,
        0.083333, 0.138186, 0.148255, 0.183218, 0.226484, 0.255919, 0.297690, 0.336035, 0.384665, 0.441222, 0.510402, 0.604469, 0.712385, 0.839121, 0.968333, 1.460317, 0.000000, 0.000000,
        0.000000, 0.118495, 0.143076, 0.176666, 0.196477, 0.232085, 0.263392, 0.302656, 0.341165, 0.396920, 0.460773, 0.541928, 0.640016, 0.757635, 0.937917, 0.928571, 0.000000, 0.000000,
        0.000000, 0.163502, 0.137706, 0.171678, 0.199074, 0.227707, 0.257758, 0.294587, 0.336764, 0.397252, 0.466851, 0.558507, 0.674198, 0.830031, 1.021111, 1.325397, 0.000000, 0.000000,
        0.000000, 0.207103, 0.280303, 0.339056, 0.406884, 0.482201, 0.571267, 0.680040, 0.830221, 1.028213, 1.286050, 1.642039, 2.097342, 2.676099, 3.580764, 4.214286, 0.000000, 0.000000,
        0.000000, 0.075246, 0.109896, 0.171037, 0.223973, 0.276169, 0.343961, 0.423382, 0.515281, 0.625262, 0.754821, 0.898535, 1.065229, 1.261645, 1.510694, 1.674603, 0.000000, 0.000000,
        0.116737, 0.241242, 0.361715, 0.486229, 0.621300, 0.777202, 0.951448, 1.153620, 1.373879, 1.629597, 1.911760, 2.235784, 2.591466, 3.051528, 3.539683, 0.000000, 0.000000, 0.000000,
        0.088608, 0.199431, 0.315091, 0.434705, 0.572647, 0.728147, 0.901087, 1.100828, 1.318835, 1.568081, 1.839141, 2.157059, 2.508234, 2.937361, 3.087302, 0.000000, 0.000000, 0.,
        0.111111, 0.103024, 0.169000, 0.268494, 0.380306, 0.512103, 0.664542, 0.835524, 1.027807, 1.242631, 1.484586, 1.748726, 2.050053, 2.398987, 2.804097, 2.888889, 0.000000, 0.000000
    ]

regionSubtraction_PU40_MC13TeV = [
        0.000000, 0.000000, 0.000000, 0.000000, 0.444444, 0.551170, 0.770085, 0.958352, 1.214790, 1.486655, 1.801059, 2.146229, 2.522583, 2.944799, 3.429136, 3.984393, 4.673410, 6.388889,
        0.000000, 0.000000, 0.000000, 0.000000, 0.319444, 0.548246, 0.810256, 0.977690, 1.229211, 1.510501, 1.826860, 2.178931, 2.562520, 2.993610, 3.489558, 4.060866, 4.757649, 5.527778,
        0.000000, 0.000000, 0.000000, 0.000000, 0.513889, 0.618421, 0.801496, 1.010128, 1.248957, 1.524992, 1.843374, 2.196967, 2.585665, 3.024237, 3.525665, 4.104405, 4.837409, 5.277778,
        0.000000, 0.000000, 0.000000, 0.000000, 0.138889, 0.178363, 0.328846, 0.438023, 0.537074, 0.655743, 0.818238, 0.997956, 1.198403, 1.428185, 1.693293, 1.998691, 2.428744, 2.861111,
        0.000000, 0.000000, 0.000000, 0.000000, 0.222222, 0.355263, 0.568803, 0.681711, 0.776114, 0.999194, 1.286749, 1.690190, 2.228222, 2.944096, 3.893814, 5.151409, 7.084399, 8.500000,
        0.000000, 0.000000, 0.000000, 0.000000, 0.347222, 0.260234, 0.282479, 0.305702, 0.330235, 0.386729, 0.472834, 0.574252, 0.713821, 0.883901, 1.117625, 1.419786, 1.887530, 2.583333,
        0.000000, 0.000000, 0.000000, 0.000000, 0.333333, 0.181287, 0.294444, 0.311500, 0.324732, 0.380449, 0.447851, 0.537887, 0.643667, 0.770106, 0.932555, 1.137137, 1.425775, 1.138889,
        0.000000, 0.000000, 0.000000, 0.000000, 0.069444, 0.144737, 0.329701, 0.345149, 0.361473, 0.428805, 0.500501, 0.595122, 0.709161, 0.849070, 1.019010, 1.234842, 1.563255, 3.944444,
        0.000000, 0.000000, 0.000000, 0.000000, 0.083333, 0.195906, 0.232692, 0.309886, 0.383756, 0.439078, 0.515435, 0.615713, 0.735333, 0.879855, 1.062850, 1.299136, 1.575533, 1.861111,
        0.000000, 0.000000, 0.000000, 0.000000, 0.222222, 0.181287, 0.245085, 0.393035, 0.422420, 0.496332, 0.583994, 0.694272, 0.829494, 0.990583, 1.194619, 1.450821, 1.804499, 2.361111,
        0.000000, 0.000000, 0.000000, 0.000000, 0.388889, 0.435673, 0.398077, 0.391201, 0.464790, 0.536569, 0.632543, 0.749761, 0.889213, 1.059990, 1.267241, 1.540288, 1.857136, 2.194444,
        0.000000, 0.000000, 0.000000, 0.000000, 0.125000, 0.576023, 0.420513, 0.396154, 0.485091, 0.546055, 0.641076, 0.754781, 0.897755, 1.070265, 1.278160, 1.532439, 1.927529, 1.805556,
        0.000000, 0.000000, 0.000000, 0.000000, 0.694444, 0.235380, 0.311111, 0.368633, 0.424446, 0.499583, 0.595857, 0.712276, 0.844093, 1.011457, 1.216950, 1.472430, 1.853009, 1.722222,
        0.000000, 0.000000, 0.000000, 0.000000, 0.166667, 0.336257, 0.301923, 0.313005, 0.387602, 0.441673, 0.524899, 0.625752, 0.744597, 0.888570, 1.073132, 1.318219, 1.614533, 1.333333,
        0.000000, 0.000000, 0.000000, 0.000000, 0.111111, 0.368421, 0.269231, 0.302253, 0.380310, 0.436402, 0.508579, 0.607197, 0.718574, 0.857328, 1.033980, 1.245847, 1.534823, 1.972222,
        0.000000, 0.000000, 0.000000, 0.000000, 0.027778, 0.228070, 0.195085, 0.278585, 0.322639, 0.374968, 0.446104, 0.529719, 0.631725, 0.758136, 0.916622, 1.111448, 1.417572, 2.277778,
        0.000000, 0.000000, 0.000000, 0.000000, 0.041667, 0.157895, 0.186752, 0.254513, 0.320827, 0.378098, 0.463270, 0.570900, 0.696241, 0.871445, 1.097610, 1.396127, 1.857488, 2.750000,
        0.000000, 0.000000, 0.000000, 0.000000, 0.138889, 0.612573, 0.624573, 0.634669, 0.790229, 0.989867, 1.282201, 1.672201, 2.205610, 2.922829, 3.850628, 5.104290, 6.823571, 10.972222,
        0.000000, 0.000000, 0.000000, 0.000000, 0.194444, 0.345029, 0.353846, 0.411016, 0.509851, 0.661643, 0.814750, 0.995329, 1.199998, 1.431079, 1.694189, 2.000995, 2.378925, 3.111111,
        0.000000, 0.000000, 0.000000, 0.000000, 0.541667, 0.573099, 0.766453, 0.977836, 1.239705, 1.530437, 1.840524, 2.197025, 2.585155, 3.027299, 3.525292, 4.112540, 4.873339, 5.972222,
        0.000000, 0.000000, 0.000000, 0.000000, 0.486111, 0.513158, 0.721581, 0.976956, 1.225950, 1.510261, 1.824951, 2.179360, 2.561912, 2.995865, 3.485821, 4.053826, 4.729921, 5.805556,
        0.000000, 0.000000, 0.000000, 0.000000, 0.319444, 0.564327, 0.694872, 0.950903, 1.201596, 1.488093, 1.801121, 2.145727, 2.523690, 2.946160, 3.422785, 3.963287, 4.633907, 5.972222
    ]

regionSubtraction_PU40_rankInts = [0, 0, 0, 0, 1, 2, 2, 2, 3, 3, 4, 5, 6, 6, 7, 8, 10, 13, 0, 0, 0, 0, 1, 2, 2, 2, 3, 4, 4, 5, 6, 6, 7, 9, 10, 12, 0, 0, 0, 0, 2, 2, 2, 3, 3, 4, 4, 5, 6, 7, 8, 9, 10, 11, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 3, 4, 5, 6, 8, 11, 15, 17, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 4, 6, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 8, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 5, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 0, 0, 0, 0, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 3, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 5, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3, 4, 6, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 3, 4, 5, 6, 8, 11, 14, 22, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 5, 5, 7, 0, 0, 0, 0, 2, 2, 2, 2, 3, 4, 4, 5, 6, 7, 8, 9, 10, 12, 0, 0, 0, 0, 1, 2, 2, 2, 3, 4, 4, 5, 6, 6, 7, 9, 10, 12, 0, 0, 0, 0, 1, 2, 2, 2, 3, 3, 4, 5, 6, 6, 7, 8, 10, 12]

regionSubtraction_DataDrivenPUM0_Run2015C_v3 = [0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.000000, 1.500000, 1.500000, 2.000000, 2.000000, 2.500000, 2.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.000000, 1.500000, 1.500000, 2.000000, 2.500000, 2.500000, 3.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.500000, 1.500000, 2.000000, 2.000000, 2.500000, 3.000000, 3.000000, 3.500000, 3.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.000000, 1.500000, 1.500000, 2.000000, 2.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.500000, 2.000000, 3.000000, 3.500000, 4.500000, 4.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.500000, 1.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 2.000000, 1.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.000000, 1.000000, 1.500000, 1.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.500000, 1.500000, 1.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.500000, 1.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.000000, 1.500000, 1.500000, 1.500000, 1.500000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.000000, 1.500000, 2.000000, 1.500000, 1.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.500000, 1.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.500000, 2.500000, 2.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.000000, 1.000000, 3.000000, 3.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 2.000000, 2.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.500000, 2.000000, 3.000000, 4.000000, 4.000000, 4.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.000000, 1.500000, 1.500000, 2.000000, 1.500000, 1.500000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.500000, 1.500000, 2.000000, 2.000000, 2.500000, 3.000000, 3.500000, 3.500000, 3.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.000000, 1.500000, 1.500000, 2.000000, 2.500000, 2.500000, 2.500000, 2.500000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.500000, 0.500000, 0.500000, 0.500000, 1.000000, 1.000000, 1.000000, 1.500000, 1.500000, 2.000000, 2.000000, 2.500000, 2.500000]

regionSubtraction_PU20_MC13TeV = [2*x for x in regionSubtraction_PU20_MC13TeV]
regionSubtraction_PU40_MC13TeV = [2*x for x in regionSubtraction_PU40_MC13TeV]
regionSubtraction_DataDrivenPUM0_Run2015C_v3  = [2*x for x in regionSubtraction_DataDrivenPUM0_Run2015C_v3 ]

pumVector = []
print '# eta pum_bin avg_rank'
for ieta in range(22) :
    canvas = ROOT.TCanvas()
    multi = ROOT.THStack('multiplot%02d' % ieta, ';PUM Bin;Average Region Rank')

    profiles = []
    tablePlot = None
    for plot in plots['regionsPUMEta%d' % ieta].values() :
        prof = plot.ProfileX("_pfx", 1, -1, "i")
        for attr in attributes :
            getattr(prof, 'Set'+attr)(getattr(plot, 'Get'+attr)())
        multi.Add(prof, 'ep')
        profiles.append(prof)
        if '2015D' in plot.GetTitle() :
            if tablePlot :
                tablePlot.Add(plot)
            else :
                tablePlot = plot.Clone('tableplot')

    tableProf = tablePlot.ProfileX("_pfx", 1, -1, "i")
    prevpum = 0.
    for pumbin in range(tableProf.GetNbinsX()) :
        pumval = tableProf.GetBinContent(pumbin+1)
        if pumval == 0. :
            pumval = prevpum
        print '%d %d %f' % (ieta, pumbin, round(pumval))
        pumVector.append(round(pumval)/2.)
        prevpum = pumval

    newTable = ROOT.TH1F('newTable%d' % ieta, 'Proposed new table', 18, -0.5, 17.5)
    newTable.SetMarkerStyle(ROOT.kStar)
    newTable.SetMarkerColor(ROOT.kBlack)
    newTable.SetFillStyle(3013)
    newTable.SetFillColorAlpha(ROOT.kBlack, 0.7)
    newTable.SetLineColorAlpha(ROOT.kWhite, 0.)
    for pumbin in range(18) :
        newTable.SetBinContent(pumbin+1, regionSubtraction_DataDrivenPUM0_Run2015C_v3[18*ieta+pumbin])
        newTable.SetBinError(pumbin+1, 0.5)
    multi.Add(newTable, 'E2')

    mcTable = ROOT.TH1F('mcTable%d' % ieta, '13TeV PU40 MC', 18, -0.5, 17.5)
    mcTable.SetMarkerStyle(ROOT.kOpenCircle)
    mcTable.SetMarkerColor(ROOT.kOrange)
    mcTable.SetFillStyle(3016)
    mcTable.SetFillColorAlpha(ROOT.kOrange-3, 0.9)
    mcTable.SetLineColorAlpha(ROOT.kWhite, 0.)
    for pumbin in range(18) :
        mcTable.SetBinContent(pumbin+1, regionSubtraction_PU40_rankInts[18*ieta+pumbin])
        mcTable.SetBinError(pumbin+1, 0.5)
    multi.Add(mcTable, 'E2')

    multi.Draw('nostack')
    legend = ROOT.TLegend(0.2, 0.6, 0.6, 0.9)
    legend.SetHeader('RCT eta = %d' % ieta)
    for prof in profiles :
        legend.AddEntry(prof, '', 'le')
    legend.AddEntry(newTable, '', 'pf')
    legend.AddEntry(mcTable, '', 'pf')
    legend.Draw()
    canvas.Print('plots/PUMavgRankEta%02d_PUM.pdf' % ieta)
    canvas.Print('plots/PUMavgRankEta%02d_PUM.root' % ieta)

print 'regionSubtraction_DataDrivenPUM0_Run2015D_v1 = cms.vdouble([' + ', '.join(['%f' % v for v in pumVector]) + '])'

